
aDD[list_, pos_] :=
 list[[Range[pos - 2]]]~Join~{list[[pos - 1]] + list[[pos]]}~
  Join~{list[[pos + 1]] + list[[pos]]}~Join~
  list[[Range[pos + 2, Length@list]]]
listR[r_] := {0}~Join~Reverse@Range@r~Join~Rest@Range@r~Join~{0}
redU[list_, n_] := 
 If[list[[n]] > list[[n - 1]], list[[n]] - n + 1, list[[n]]]
reduC[list_] := {list[[1]]}~Join~
  Flatten[redU[list, #] & /@ Range[2, Length@list]]
redU1[list_, n_] := 
 If[list[[n]] >= list[[n - 1]], n + list[[n]] - 1, list[[n]]]
reduC1[list_] := {list[[1]]}~
  Join~(redU1[list, #] & /@ Range[2, Length@list])
totPerm[n_] := 
 Total@Fold[aDD, listR@n, reduC@#] & /@ Permutations[Range[3, 2 n - 1]]
forAll[list_, cond_] := Select[list, ! cond@# &, 1] === {}
selE[n_] := 
 Select[reduC@# & /@ Permutations[Range[3, 2*n - 1]], 
  forAll[#, # > 2 &] &]
maX[n_] := 
 Quiet@Max@
   Select[Total@Fold[aDD, listR@n, reduC@#] & /@ selE@n, NumericQ]
maxN[n_] := 
 Reverse@Range[n + 1, n + 2]~Join~
  Most@Reverse@Riffle[Range[3, n], Range[3, n]]
maxNa[n_] := 
 Reverse@Range[n + 1, n + 2]~Join~
   Most@Reverse@Riffle[Range[3, n], Range[3, n]] - 1
maxX[n_] := Total@Fold[aDD, listR@n, maxN@n]
maxL[nn_] := Join[maxNa@nn, {2, 1}]
maxO[nn_] := ({First@maxL@nn - 1}~Join~Rest@maxL@nn)
gameL[nn_] := 
 Quiet@With[{aa = {Most@Rest@listR@nn}~Join~
      Table[Most@Rest@Fold[aDD, listR@nn, Take[maxN@nn, mm]], {mm, 
        2 nn - 3}]}, 
   Grid[{aa[[1]]}~Join~
     Table[With[{cc = (maxN@nn)[[qq]]}, 
       Take[aa[[qq + 1]], cc - 2]~Join~ConstantArray["", qq]~Join~
        Drop[aa[[qq + 1]], cc - 2]], {qq, 1, 2 nn - 3}]~
     Join~{{Total@Fold[aDD, listR@nn, maxN@nn]}~Join~
       ConstantArray["", nn]}, ItemSize -> All]]
gameT[list_] := 
 With[{nn = ((Length@list + 1)/2)}, 
  Quiet@With[{aa = {Most@Rest@listR@nn}~Join~
       Table[Most@
         Rest@Fold[aDD, listR@nn, 
           Take[(Drop[reduC@list, -2] + 1), mm]], {mm, 2 nn - 3}]}, 
    Grid[{aa[[1]]}~Join~
      Table[With[{cc = (Drop[reduC@list, -2] + 1)[[qq]]}, 
        Take[aa[[qq + 1]], cc - 2]~Join~ConstantArray["", qq]~Join~
         Drop[aa[[qq + 1]], cc - 2]], {qq, 1, 2 nn - 3}]~
      Join~{{Total@Fold[aDD, listR@nn, (Drop[reduC@list, -2] + 1)]}~
        Join~ConstantArray["", nn]}, ItemSize -> All]]]
testT[list_] := 
 Total@Fold[aDD, 
   listR@((Length@list + 1)/2), (Drop[reduC@list, -2] + 1)]
lenT[length_, total_] := 
 With[{aa = Subsets[Range@length, {total}]}, 
  ReplacePart[ConstantArray[0, length], #] & /@ 
   Table[# -> 1 & /@ aa[[k]], {k, Length@aa}]]
fF[n_] := 
 Take[Flatten@
   ConstantArray[If[EvenQ@n == False, {1, 0}, {0, 1}], Ceiling[n/2]], 
  n]
fFli[list_] := 
 Flatten@Rest@
   Flatten[Transpose@{ConstantArray[{0, 0}, Length@list], 
      fF@# & /@ list}, 1]
jF[nn_] := 
 With[{listA = {{2}, {4}, {0, 4}, {0, 6}, {0, 8}, {0, 10}, {0, 
       12}, {2, 1, 3, 4}, {4, 1, 3, 4}, {4, 3, 3, 4}, {4, 3, 3, 
       6}, {6, 3, 3, 6}, {5, 3, 3, 3, 4}, {5, 3, 3, 3, 6}, {4, 3, 3, 
       3, 3, 4}, {6, 3, 3, 3, 3, 4}, {6, 3, 3, 3, 3, 6}, {8, 3, 3, 3, 
       3, 6}, {8, 3, 3, 5, 3, 6}, {8, 3, 5, 3, 5, 6}, {8, 3, 5, 5, 5, 
       6}, {8, 5, 5, 5, 5, 6}, {10, 5, 5, 5, 5, 6}, {10, 5, 5, 5, 5, 
       8}, {12, 5, 5, 5, 5, 8}, {12, 5, 5, 7, 5, 8}, {12, 5, 5, 7, 7, 
       8}, {12, 5, 7, 7, 7, 8}, {12, 7, 7, 7, 7, 8}, {12, 7, 7, 7, 7, 
       10}, {14, 7, 7, 7, 7, 10}, {14, 7, 7, 9, 7, 10}, {14, 7, 7, 9, 
       9, 10}, {14, 7, 9, 9, 9, 10}, {14, 9, 9, 9, 9, 10}, {16, 9, 9, 
       9, 9, 10}, {16, 9, 9, 9, 9, 12}, {16, 9, 9, 11, 9, 12}, {16, 9,
        9, 11, 11, 12}, {16, 9, 11, 11, 11, 12}, {16, 11, 11, 11, 11, 
       12}, {18, 11, 11, 11, 11, 12}, {18, 11, 11, 11, 11, 14}, {18, 
       11, 11, 13, 11, 14}, {18, 11, 11, 13, 13, 14}, {18, 11, 13, 13,
        13, 14}, {18, 13, 13, 13, 13, 14}, {18, 13, 13, 13, 13, 
       16}, {18, 13, 13, 15, 13, 16}, {18, 13, 13, 15, 15, 16}, {18, 
       13, 15, 15, 15, 16}, {18, 15, 15, 15, 15, 16}, {18, 15, 15, 15,
        15, 18}, {18, 15, 15, 15, 17, 18}, {18, 15, 15, 17, 17, 
       18}, {18, 15, 17, 17, 17, 18}, {18, 17, 17, 17, 17, 18}, {18, 
       17, 17, 17, 17, 20}, {18, 17, 17, 17, 19, 20}, {18, 17, 17, 19,
        19, 20}, {18, 17, 19, 19, 19, 20}, {18, 17, 19, 19, 19, 
       22}, {18, 17, 19, 19, 21, 22}, {18, 17, 19, 21, 21, 22}, {18, 
       17, 21, 21, 21, 22}, {18, 17, 21, 21, 21, 24}, {18, 17, 21, 21,
        23, 24}, {18, 17, 21, 23, 23, 24}, {18, 17, 23, 23, 23, 
       24}, {18, 17, 23, 23, 23, 26}, {18, 17, 23, 23, 25, 26}, {18, 
       17, 23, 25, 25, 26}, {18, 17, 25, 25, 25, 26}, {18, 17, 25, 25,
        25, 28}, {18, 17, 25, 25, 27, 28}, {18, 17, 25, 27, 27, 
       28}, {18, 17, 27, 27, 27, 28}, {18, 17, 27, 27, 27, 30}, {18, 
       17, 27, 27, 29, 30}, {18, 17, 27, 29, 29, 30}, {18, 17, 29, 29,
        29, 30}, {18, 17, 29, 29, 29, 32}, {18, 17, 29, 29, 31, 
       32}, {18, 17, 29, 31, 31, 32}, {18, 17, 31, 31, 31, 32}, {18, 
       17, 31, 31, 31, 34}, {18, 17, 31, 31, 33, 34}, {18, 17, 31, 33,
        33, 34}, {18, 17, 33, 33, 33, 34}, {18, 17, 33, 33, 33, 
       36}, {18, 17, 33, 33, 35, 36}, {18, 17, 33, 35, 35, 36}, {18, 
       17, 33, 35, 35, 38}, {18, 17, 35, 35, 35, 38}, {18, 17, 35, 35,
        37, 38}, {18, 17, 35, 37, 37, 38}, {18, 17, 35, 37, 37, 
       40}, {18, 17, 35, 37, 39, 40}, {18, 17, 35, 39, 39, 40}, {18, 
       17, 35, 39, 39, 42}, {18, 17, 35, 39, 41, 42}, {18, 17, 35, 41,
        41, 42}, {18, 17, 35, 41, 41, 44}, {18, 17, 35, 41, 43, 
       44}, {18, 17, 35, 43, 43, 44}, {18, 17, 35, 43, 43, 46}, {18, 
       17, 35, 43, 45, 46}, {18, 17, 35, 45, 45, 46}, {18, 17, 35, 45,
        45, 48}, {18, 17, 35, 45, 47, 48}, {18, 17, 35, 47, 47, 
       48}, {18, 17, 35, 47, 47, 50}, {18, 17, 35, 47, 49, 50}, {18, 
       17, 35, 49, 49, 50}, {18, 17, 35, 49, 49, 52}, {18, 17, 35, 49,
        51, 52}, {18, 17, 35, 51, 51, 52}, {18, 17, 35, 51, 51, 
       54}, {18, 17, 35, 51, 53, 54}, {18, 17, 35, 53, 53, 54}, {18, 
       17, 35, 53, 53, 56}, {18, 17, 35, 53, 55, 56}, {18, 17, 35, 55,
        55, 56}, {18, 17, 35, 55, 55, 58}, {18, 17, 35, 55, 57, 
       58}, {18, 17, 35, 57, 57, 58}, {18, 17, 35, 57, 57, 60}, {18, 
       17, 35, 57, 59, 60}, {18, 17, 35, 59, 59, 60}, {18, 17, 35, 59,
        59, 62}, {18, 17, 35, 59, 61, 62}, {18, 17, 35, 61, 61, 
       62}, {18, 17, 35, 61, 61, 64}, {18, 17, 35, 61, 63, 64}, {18, 
       17, 35, 63, 63, 64}, {18, 17, 35, 63, 63, 66}, {18, 17, 35, 63,
        65, 66}, {18, 17, 35, 65, 65, 66}, {18, 17, 35, 65, 65, 
       68}, {18, 17, 35, 65, 67, 68}, {18, 17, 35, 67, 67, 68}, {18, 
       17, 35, 67, 67, 70}, {18, 17, 35, 67, 69, 70}, {18, 17, 35, 69,
        69, 70}, {18, 17, 35, 69, 69, 72}, {18, 17, 35, 69, 71, 
       72}, {18, 17, 35, 69, 71, 74}, {18, 17, 35, 69, 73, 74}, {18, 
       17, 35, 69, 73, 76}, {18, 17, 35, 69, 75, 76}, {18, 17, 35, 69,
        75, 78}, {18, 17, 35, 69, 77, 78}, {18, 17, 35, 69, 77, 
       80}, {18, 17, 35, 69, 79, 80}, {18, 17, 35, 69, 79, 82}, {18, 
       17, 35, 69, 81, 82}, {18, 17, 35, 69, 81, 84}, {18, 17, 35, 69,
        83, 84}, {18, 17, 35, 69, 83, 86}, {18, 17, 35, 69, 85, 
       86}, {18, 17, 35, 69, 85, 88}, {18, 17, 35, 69, 87, 88}, {18, 
       17, 35, 69, 87, 90}, {18, 17, 35, 69, 89, 90}, {18, 17, 35, 69,
        89, 92}, {18, 17, 35, 69, 91, 92}, {18, 17, 35, 69, 91, 
       94}, {18, 17, 35, 69, 93, 94}, {18, 17, 35, 69, 93, 96}, {18, 
       17, 35, 69, 95, 96}, {18, 17, 35, 69, 95, 98}, {18, 17, 35, 69,
        97, 98}, {18, 17, 35, 69, 97, 100}, {18, 17, 35, 69, 99, 
       100}, {18, 17, 35, 69, 99, 102}, {18, 17, 35, 69, 101, 
       102}, {18, 17, 35, 69, 101, 104}, {18, 17, 35, 69, 103, 
       104}, {18, 17, 35, 69, 103, 106}, {18, 17, 35, 69, 105, 
       106}, {18, 17, 35, 69, 105, 108}, {18, 17, 35, 69, 107, 
       108}, {18, 17, 35, 69, 107, 110}, {18, 17, 35, 69, 109, 
       110}, {18, 17, 35, 69, 109, 112}, {18, 17, 35, 69, 111, 
       112}, {18, 17, 35, 69, 111, 114}, {18, 17, 35, 69, 113, 
       114}, {18, 17, 35, 69, 113, 116}, {18, 17, 35, 69, 115, 
       116}, {18, 17, 35, 69, 115, 118}, {18, 17, 35, 69, 117, 
       118}, {18, 17, 35, 69, 117, 120}, {18, 17, 35, 69, 119, 
       120}, {18, 17, 35, 69, 119, 122}, {18, 17, 35, 69, 121, 
       122}, {18, 17, 35, 69, 121, 124}, {18, 17, 35, 69, 123, 
       124}, {18, 17, 35, 69, 123, 126}, {18, 17, 35, 69, 125, 
       126}, {18, 17, 35, 69, 125, 128}, {18, 17, 35, 69, 127, 
       128}, {18, 17, 35, 69, 127, 130}, {18, 17, 35, 69, 129, 
       130}, {18, 17, 35, 69, 129, 132}, {18, 17, 35, 69, 131, 
       132}, {18, 17, 35, 69, 131, 134}, {18, 17, 35, 69, 133, 
       134}, {18, 17, 35, 69, 133, 136}, {18, 17, 35, 69, 135, 
       136}, {18, 17, 35, 69, 135, 138}, {18, 17, 35, 69, 137, 
       138}, {18, 17, 35, 69, 137, 140}, {18, 17, 35, 69, 137, 
       142}, {18, 17, 35, 69, 139, 142}}},
   1 - (fFli@# & /@ (Most@#~Join~{Last@# - 1} & /@ listA))][[nn - 2]]
jF1[nn_] := 
 Flatten@If[nn < 217, jF[nn], 
   Most@Most@(1 - (fFli@# &@(Most@#~Join~{Last@# - 1} &@{18, 17, 35, 
            69, 139, 142 + 2 (nn - 216)})))]
jFf[nn_] := 
 With[{aa = Reverse@Rest@Accumulate@jF@(nn)}, Join[{First@aa + 1}, aa]]
jNum[nn_] := 
 With[{n = # + 1}, 
    With[{x = 
       If[3 <= n <= 4, -1, 
        If[5 <= n <= 9, 0, If[10 <= n <= 16, 1, If[17 <= n, 2]]]]}, 
     testT@(Join[{n + x}, n + x - Accumulate@jF@n, {1}])]] &@nn
jList[nn_] := 
 With[{n = # + 1}, 
    With[{x = 
       If[3 <= n <= 4, -1, 
        If[5 <= n <= 9, 0, 
         If[10 <= n <= 16, 1, If[17 <= n, 2]]]]}, (Join[{n + x}, 
       n + x - Accumulate@jF@n, {1}])]] &@nn
jLista[nn_] := reduC1@jList@nn
jFf1[nn_] := 
 With[{aa = Reverse@Rest@Accumulate@jF1@(nn)}, 
  Join[{First@aa + 1}, aa]]
jNum1[nn_] := 
 With[{n = # + 1}, 
    With[{x = 
       If[3 <= n <= 4, -1, 
        If[5 <= n <= 9, 0, If[10 <= n <= 16, 1, If[17 <= n, 2]]]]}, 
     testT@(Join[{n + x}, n + x - Accumulate@jF1@n, {1}])]] &@nn
jList1[nn_] := 
 With[{n = # + 1}, 
    With[{x = 
       If[3 <= n <= 4, -1, 
        If[5 <= n <= 9, 0, 
         If[10 <= n <= 16, 1, If[17 <= n, 2]]]]}, (Join[{n + x}, 
       n + x - Accumulate@jF1@n, {1}])]] &@nn
jLista1[nn_] := reduC1@jList1@nn
lowerB[nn_] := 
 DifferenceRoot[
   Function[{y, n}, {-4 - n + y[n] - 3 y[1 + n] + y[2 + n] == 0, 
     y[1] == 6, y[2] == 21, y[3] == 63}]][nn - 1]
upperB[n_] := Round[lowerB[n] + Exp[n]]
upperB[n_, c_] := Round[lowerB[n] + Exp[n - c]]
(*for strictly increasing c*)
lowerB[nn_] := 
 DifferenceRoot[
   Function[{y, n}, {-4 - n + y[n] - 3 y[1 + n] + y[2 + n] == 0, 
     y[1] == 6, y[2] == 21, y[3] == 63}]][nn - 1]
upperB[nn_] := 
 DifferenceRoot[
   Function[{y, n}, {-6 - n + y[n] - 3 y[1 + n] + y[2 + n] == 0, 
     y[1] == 6, y[2] == 25, y[3] == 77}]][nn - 1]
lowerBound[nn_] := 
 DifferenceRoot[
   Function[{y, n}, {-4 - n + y[n] - 3 y[1 + n] + y[2 + n] == 0, 
     y[1] == 6, y[2] == 21}]][nn - 1]
graphTa[nn_, a_] := 
 With[{aa = reduC1@jList1@nn}, 
  With[{coords = 
     Most@With[{n = Length@aa, \[Theta] = LambertW[1]}, 
       N@(Table[{{Re[E^(I \[Theta])], -Im[E^(I \[Theta])]}, {Im[
              E^(I \[Theta])], Re[E^(I \[Theta])]}}.{Re[
             E^(I (1 + 2 \[Pi] ii/n))], 
            Im[E^(I (1 + 2 \[Pi] ii/n))]}, {ii, 
           Join[{n}, Range[n]]}])], 
    verts = With[{bb = aa~Join~{aa[[1]]}}, 
      Sort@
       Flatten[Thread[#[[1]] -> #[[2]]] & /@ 
         Transpose@{Most@aa, Rest@aa}]]}, With[{
     ord = DeleteDuplicates[Join @@ List @@@ verts]},
    Graph[verts, DirectedEdges -> False, 
     VertexLabels -> If[a == 1, "Name", None], 
     VertexCoordinates -> Reverse[coords][[ord]]]]]]
graphTc[nn_, a_] := 
 With[{aa = reduC1@maxO@nn}, 
  With[{coords = 
     Most@With[{n = Length@aa, \[Theta] = LambertW[1]}, 
       N@(Table[{{Re[E^(I \[Theta])], -Im[E^(I \[Theta])]}, {Im[
              E^(I \[Theta])], Re[E^(I \[Theta])]}}.{Re[
             E^(I (1 + 2 \[Pi] ii/n))], 
            Im[E^(I (1 + 2 \[Pi] ii/n))]}, {ii, 
           Join[{n}, Range[n]]}])], 
    verts = With[{bb = aa~Join~{aa[[1]]}}, 
      Sort@Flatten[
        Thread[#[[1]] -> #[[2]]] & /@ Transpose@{Most@aa, Rest@aa}]]},
    With[{
     ord = DeleteDuplicates[Join @@ List @@@ verts]},
    Graph[verts, DirectedEdges -> False, 
     VertexLabels -> If[a == 1, "Name", None], 
     VertexCoordinates -> Reverse[coords][[ord]]]]]]
comareG[nn_, a_] := 
 GraphicsRow[{graphTa[nn, a], graphTc[nn, a]}, ImageSize -> 500]
(*jNum10k=jNum1@10000;
jNum10k1 = jNum1@10001;
const = With[{sf = 4177}, {SetPrecision[jNum10k/lowerBound@# &@10000, 
     sf], SetPrecision[jNum10k1/lowerBound@# &@10001, sf]}][[1]];*)
